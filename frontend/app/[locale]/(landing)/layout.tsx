// app/[locale]/(landing)/layout.tsx
import "../../../style/globals.css";
import { Geist, Geist_Mono } from "next/font/google";
import { Tajawal, Poppins } from "next/font/google";
import { cookies } from "next/headers";

import type { Metadata } from "next";
import type { ReactNode } from "react";
import I18nextWrapper from "@/lib/i18n/I18nextWrapper";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
  display: "swap",
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
  display: "swap",
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
  metadataBase: new URL(
    process.env.NEXT_PUBLIC_SITE_URL || "http://localhost:3000"
  ),
};

// Arabic font
const tajawal = Tajawal({
  variable: "--font-tajawal",
  subsets: ["arabic"],
  display: "swap",
  weight: ["400", "500", "700"],
});

// English font
const poppins = Poppins({
  variable: "--font-poppins",
  subsets: ["latin"],
  weight: ["400", "500", "600", "700"],
  display: "swap",
});

export default async function LandingLayout({
  children,
}: {
  children: ReactNode;
}) {
  const cookieStore = await cookies();
  const lang = cookieStore.get("NEXT_LOCALE")?.value || "en";
  const isArabic = lang === "ar";
  const langFont = isArabic ? tajawal.variable : poppins.variable;
  return (
    <html lang={lang} suppressHydrationWarning>
      <body
        className={`${geistSans.variable} ${geistMono.variable}  ${langFont}  font-sans antialiased`}
      >
        <I18nextWrapper locale={lang}>
          <main className="w-full m-0 p-0 overflow-x-hidden">{children}</main>
        </I18nextWrapper>
        ;
      </body>
    </html>
  );
}
